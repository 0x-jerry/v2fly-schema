{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "definitions": {
        "HeaderObjectType": {
            "enum": [
                "dtls",
                "none",
                "srtp",
                "utp",
                "wechat-video",
                "wireguard"
            ],
            "type": "string"
        },
        "IBalancerObject": {
            "properties": {
                "selector": {
                    "description": "一个字符串数组，其中每一个字符串将用于和出站协议标识的前缀匹配",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "tag": {
                    "description": "此负载均衡器的标识，用于匹配RuleObject中的balancerTag",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "IBlackholeOutbound": {
            "properties": {
                "mux": {
                    "description": "Mux 配置，Mux 功能是在一条 TCP 连接上分发多个 TCP 连接的数据",
                    "properties": {
                        "concurrency": {
                            "description": "最大并发连接数。最小值1，最大值1024，默认值8。这个数值表示了一个 TCP 连接上最多承载的 Mux 连接数量。当客户端发出了 8 个 TCP 请求，而concurrency=8时，V2Ray 只会发出一条实际的 TCP 连接，客户端的 8 个请求全部由这个 TCP 连接传输",
                            "type": "number"
                        },
                        "enabled": {
                            "description": "是否启用 Mux",
                            "type": "boolean"
                        }
                    },
                    "type": "object"
                },
                "protocol": {
                    "enum": [
                        "blackhole"
                    ],
                    "type": "string"
                },
                "proxySettings": {
                    "additionalProperties": {
                    },
                    "description": "出站代理配置。当出站代理生效时，此出站协议的streamSettings将不起作用",
                    "properties": {
                        "tag": {
                            "description": "当指定另一个出站协议的标识时，此出站协议发出的数据，将被转发至所指定的出站协议发出",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "sendThrough": {
                    "description": "用于发送数据的 IP 地址，当主机有多个 IP 地址时有效，默认值为\"0.0.0.0\"",
                    "type": "string"
                },
                "settings": {
                    "$ref": "#/definitions/IBlackholeOutboundSettings",
                    "description": "具体的配置内容，视协议不同而不同"
                },
                "streamSettings": {
                    "$ref": "#/definitions/IV2rayStreamSetting",
                    "description": "底层传输配置"
                },
                "tag": {
                    "description": "此出站连接的标识，用于在其它的配置中定位此连接。当其值不为空时，必须在所有 tag 中唯一",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "IBlackholeOutboundSettings": {
            "properties": {
                "response": {
                    "description": "配置黑洞的响应数据。Blackhole 会在收到待转发数据之后，发送指定的响应数据，然后关闭连接。待转发的数据将被丢弃。如不指定此项，Blackhole 将直接关闭连接",
                    "properties": {
                        "type": {
                            "description": "type为\"none\"（默认值）时，Blackhole将直接关闭连接。当type为\"http\"时，Blackhole会发回一个简单的 HTTP 403 数据包，然后关闭连接",
                            "enum": [
                                "http",
                                "none"
                            ],
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "ICertificateObject": {
            "properties": {
                "certificate": {
                    "description": "一个字符串数组，表示证书内容，格式如样例所示。certificate 和 certificateFile 二者选一。",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "certificateFile": {
                    "description": "证书文件路径，如使用 OpenSSL 生成，后缀名为 .crt。",
                    "type": "string"
                },
                "key": {
                    "description": "一个字符串数组，表示密钥内容，格式如样例如示。key 和 keyFile 二者选一。\n\n当 certificateFile 和 certificate 同时指定时，V2Ray 优先使用 certificateFile。keyFile 和 key 也一样。",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "keyFile": {
                    "description": "密钥文件路径，如使用 OpenSSL 生成，后缀名为 .key。目前暂不支持需要密码的 key 文件。",
                    "type": "string"
                },
                "usage": {
                    "description": "- \"encipherment\"：证书用于 TLS 认证和加密。\n- \"verify\"：证书用于验证远端 TLS 的证书。当使用此项时，当前证书必须为 CA 证书。\n- \"issue\"：证书用于签发其它证书。当使用此项时，当前证书必须为 CA 证书。",
                    "enum": [
                        "encipherment",
                        "issue",
                        "verify"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "IDNSOutbound": {
            "properties": {
                "mux": {
                    "description": "Mux 配置，Mux 功能是在一条 TCP 连接上分发多个 TCP 连接的数据",
                    "properties": {
                        "concurrency": {
                            "description": "最大并发连接数。最小值1，最大值1024，默认值8。这个数值表示了一个 TCP 连接上最多承载的 Mux 连接数量。当客户端发出了 8 个 TCP 请求，而concurrency=8时，V2Ray 只会发出一条实际的 TCP 连接，客户端的 8 个请求全部由这个 TCP 连接传输",
                            "type": "number"
                        },
                        "enabled": {
                            "description": "是否启用 Mux",
                            "type": "boolean"
                        }
                    },
                    "type": "object"
                },
                "protocol": {
                    "enum": [
                        "dns"
                    ],
                    "type": "string"
                },
                "proxySettings": {
                    "additionalProperties": {
                    },
                    "description": "出站代理配置。当出站代理生效时，此出站协议的streamSettings将不起作用",
                    "properties": {
                        "tag": {
                            "description": "当指定另一个出站协议的标识时，此出站协议发出的数据，将被转发至所指定的出站协议发出",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "sendThrough": {
                    "description": "用于发送数据的 IP 地址，当主机有多个 IP 地址时有效，默认值为\"0.0.0.0\"",
                    "type": "string"
                },
                "settings": {
                    "$ref": "#/definitions/IDNSOutboundSettings",
                    "description": "具体的配置内容，视协议不同而不同"
                },
                "streamSettings": {
                    "$ref": "#/definitions/IV2rayStreamSetting",
                    "description": "底层传输配置"
                },
                "tag": {
                    "description": "此出站连接的标识，用于在其它的配置中定位此连接。当其值不为空时，必须在所有 tag 中唯一",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "IDNSOutboundSettings": {
            "properties": {
                "address": {
                    "description": "(V2Ray 4.16+) 修改 DNS 服务器地址。当不指定时，保持来源中指定的地址不变",
                    "type": "string"
                },
                "network": {
                    "description": "(V2Ray 4.16+) 修改 DNS 流量的传输层协议，可选的值有\"tcp\"和\"udp\"。当不指定时，保持来源的传输方式不变",
                    "enum": [
                        "tcp",
                        "udp"
                    ],
                    "type": "string"
                },
                "port": {
                    "description": "(V2Ray 4.16+) 修改 DNS 服务器端口。当不指定时，保持来源中指定的端口不变",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "IDefaultObject": {
            "properties": {
                "alterId": {
                    "description": "为了进一步防止被探测，一个用户可以在主 ID 的基础上，再额外生成多个 ID。这里只需要指定额外的 ID 的数量，推荐值为 4。不指定的话，默认值是 0。最大值 65535。这个值不能超过服务器端所指定的值",
                    "type": "number"
                },
                "level": {
                    "description": "用户等级，默认值为0",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "IDetourObject": {
            "properties": {
                "to": {
                    "description": "一个入站协议的tag，详见配置文件。指定的入站协议必须是一个 VMess",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "IDokodemoInbound": {
            "properties": {
                "allocate": {
                    "$ref": "#/definitions/IV2rayAllocate",
                    "description": "端口分配设置"
                },
                "listen": {
                    "description": "监听地址，只允许 IP 地址，默认值为 \"0.0.0.0\"，表示接收所有网卡上的连接。除此之外，必须指定一个现有网卡的地址。\n\nv4.32.0+，支持填写 Unix domain socket，格式为绝对路径，形如 \"/dev/shm/domain.socket\"，可在开头加 \"@\" 代表 abstract (opens new window)，\"@@\" 则代表带 padding 的 abstract。\n\n填写 Unix domain socket 时，port 和 allocate 将被忽略，协议暂时可选 VLESS、VMess、Trojan，传输方式可选 TCP、WebSocket、HTTP/2。",
                    "type": "string"
                },
                "port": {
                    "description": "端口\n\n整型数值: 实际的端口号\n\n环境变量: 以\"env:\"开头，后面是一个环境变量的名称，如\"env:PORT\"。V2Ray 会以字符串形式解析这个环境变量。\n\n字符串: 可以是一个数值类型的字符串，如\"1234\"；或者一个数值范围，如\"5-10\"表示端口 5 到端口 10 这 6 个端口。",
                    "type": [
                        "string",
                        "number"
                    ]
                },
                "protocol": {
                    "description": "连接协议名称，可选的值见协议列表。",
                    "enum": [
                        "dokodemo-door"
                    ],
                    "type": "string"
                },
                "settings": {
                    "$ref": "#/definitions/IDokodemoInboundSettings",
                    "description": "具体的配置内容，视协议不同而不同"
                },
                "sniffing": {
                    "$ref": "#/definitions/IV2raySniffing",
                    "description": "尝试探测流量的类型"
                },
                "streamSettings": {
                    "$ref": "#/definitions/IV2rayStreamSetting",
                    "description": "底层传输配置"
                },
                "tag": {
                    "description": "此入站连接的标识，用于在其它的配置中定位此连接。当其不为空时，其值必须在所有tag中唯一",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "IDokodemoInboundSettings": {
            "properties": {
                "address": {
                    "description": "将流量转发到此地址。可以是一个 IP 地址，形如\"1.2.3.4\"，或者一个域名，形如\"v2ray.com\"。字符串类型",
                    "type": "string"
                },
                "followRedirect": {
                    "description": "当值为true时，dokodemo-door 会识别出由 iptables 转发而来的数据，并转发到相应的目标地址。详见传输配置中的tproxy设置",
                    "type": "boolean"
                },
                "network": {
                    "description": "可接收的网络协议类型。比如当指定为\"tcp\"时，任意门仅会接收 TCP 流量。默认值为\"tcp\"",
                    "enum": [
                        "tcp",
                        "tcp,udp",
                        "udp"
                    ],
                    "type": "string"
                },
                "port": {
                    "description": "将流量转发到目标地址的指定端口，范围[1, 65535]，数值类型。必填参数",
                    "type": "number"
                },
                "timeout": {
                    "description": "入站数据的时间限制（秒），默认值为 300\n\nV2Ray 3.1 后等价于对应用户等级的 connIdle 策略",
                    "type": "number"
                },
                "userLevel": {
                    "description": "用户等级，所有连接都会使用这个用户等级",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "IDsSettings": {
            "properties": {
                "path": {
                    "description": "一个合法的文件路径。在运行 V2Ray 之前，这个文件必须不存在",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "IFallbacksObject": {
            "properties": {
                "alpn": {
                    "description": "尝试匹配 TLS ALPN 协商结果，空为任意，默认为 \"\"\n\n有需要时，VLESS 才会尝试读取 TLS ALPN 协商结果，若成功，输出 info realAlpn = 到日志。\n\n用途：解决了 Nginx 的 h2c 服务不能同时兼容 http/1.1 的问题，Nginx 需要写两行 listen，分别用于 1.1 和 h2c。\n\n注意：fallbacks alpn 存在 \"h2\" 时，Inbound TLS 需设置 \"alpn\":[\"h2\",\"http/1.1\"]，以支持 h2 访问。",
                    "type": "string"
                },
                "dest": {
                    "description": "决定 TLS 解密后 TCP 流量的去向，目前支持两类地址：（该项必填，否则无法启动）\n\n1. TCP，格式为 \"addr:port\"，其中 addr 支持 IPv4、域名、IPv6，若填写域名，也将直接发起 TCP 连接（而不走内置的 DNS）。\n2. Unix domain socket，格式为绝对路径，形如 \"/dev/shm/domain.socket\"，可在开头加 \"@\" 代表 abstract (opens new window)，\"@@\" 则代表带 padding 的 abstract。\n\n若只填 port，数字或字符串均可，形如 80、\"80\"，通常指向一个明文 http 服务（addr 会被补为 \"127.0.0.1\"）。",
                    "type": [
                        "string",
                        "number"
                    ]
                },
                "path": {
                    "description": "尝试匹配首包 HTTP PATH，空为任意，默认为空，非空则必须以 \"/\" 开头，不支持 h2c。\n\n智能：有需要时，VLESS 才会尝试看一眼 PATH（不超过 55 个字节；最快算法，并不完整解析 HTTP），若成功，输出 info realPath = 到日志。\n\n用途：分流其它 inbound 的 WebSocket 流量或 HTTP 伪装流量，没有多余处理、纯粹转发流量，实测比 Nginx 反代更强 (opens new window)。\n\n注意：fallbacks 所在入站本身必须是 TCP+TLS，这是分流至其它 WS 入站用的，被分流的入站则无需配置 TLS。",
                    "type": "string"
                },
                "xver": {
                    "description": "发送 PROXY protocol (opens new window)，专用于传递请求的真实来源 IP 和端口，填版本 1 或 2，默认为 0，即不发送。若有需要建议填 1。\n\n目前填 1 或 2，功能完全相同，只是结构不同，且前者可打印，后者为二进制。V2Ray 的 TCP 和 WS 入站均已支持接收 PROXY protocol。\n\n补充说明\n\n将匹配到最精确的子元素，与子元素的排列顺序无关。若配置了几个 alpn 和 path 均相同的子元素，则会以最后的为准。\n\n回落分流均是解密后 TCP 层的转发，而不是 HTTP 层，只在必要时检查首包 PATH。\n\n不支持按域名分流。若有此需求，建议前置 Nginx 等并配置 stream SNI 分流。",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "IFreedomOutbound": {
            "properties": {
                "mux": {
                    "description": "Mux 配置，Mux 功能是在一条 TCP 连接上分发多个 TCP 连接的数据",
                    "properties": {
                        "concurrency": {
                            "description": "最大并发连接数。最小值1，最大值1024，默认值8。这个数值表示了一个 TCP 连接上最多承载的 Mux 连接数量。当客户端发出了 8 个 TCP 请求，而concurrency=8时，V2Ray 只会发出一条实际的 TCP 连接，客户端的 8 个请求全部由这个 TCP 连接传输",
                            "type": "number"
                        },
                        "enabled": {
                            "description": "是否启用 Mux",
                            "type": "boolean"
                        }
                    },
                    "type": "object"
                },
                "protocol": {
                    "enum": [
                        "freedom"
                    ],
                    "type": "string"
                },
                "proxySettings": {
                    "additionalProperties": {
                    },
                    "description": "出站代理配置。当出站代理生效时，此出站协议的streamSettings将不起作用",
                    "properties": {
                        "tag": {
                            "description": "当指定另一个出站协议的标识时，此出站协议发出的数据，将被转发至所指定的出站协议发出",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "sendThrough": {
                    "description": "用于发送数据的 IP 地址，当主机有多个 IP 地址时有效，默认值为\"0.0.0.0\"",
                    "type": "string"
                },
                "settings": {
                    "$ref": "#/definitions/IFreedomOutboundSettings",
                    "description": "具体的配置内容，视协议不同而不同"
                },
                "streamSettings": {
                    "$ref": "#/definitions/IV2rayStreamSetting",
                    "description": "底层传输配置"
                },
                "tag": {
                    "description": "此出站连接的标识，用于在其它的配置中定位此连接。当其值不为空时，必须在所有 tag 中唯一",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "IFreedomOutboundSettings": {
            "properties": {
                "domainStrategy": {
                    "description": "在目标地址为域名时，Freedom 可以直接向此域名发出连接（\"AsIs\"），或者将域名解析为 IP 之后再建立连接（\"UseIP\"、\"UseIPv4\"、\"UseIPv6\"）。解析 IP 的步骤会使用 V2Ray 内建的 DNS。默认值为\"AsIs\"\n(V2Ray 4.6+) 当使用\"UseIP\"模式，并且出站连接配置中指定了sendThrough时，Freedom 会根据sendThrough的值自动判断所需的IP类型，IPv4 或 IPv6\n(V2Ray 4.7+) 当使用\"UseIPv4\"或\"UseIPv6\"模式时，Freedom 会只使用对应的 IPv4 或 IPv6 地址。当sendThrough指定了不匹配的本地地址时，将导致连接失败",
                    "enum": [
                        "AsIs",
                        "UseIP",
                        "UseIPv4",
                        "UseIPv6"
                    ],
                    "type": "string"
                },
                "redirect": {
                    "description": "Freedom 会强制将所有数据发送到指定地址（而不是入站协议指定的地址）。其值为一个字符串，样例：\"127.0.0.1:80\", \":1234\"。当地址不指定时，如\":443\"，Freedom 不会修改原先的目标地址。当端口为0时，如\"v2ray.com:0\"，Freedom 不会修改原先的端口",
                    "type": "string"
                },
                "userLevel": {
                    "description": "用户等级，所有连接都使用这一等级",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "IHttpAccountObject": {
            "properties": {
                "pass": {
                    "description": "密码，字符串类型。必填",
                    "type": "string"
                },
                "user": {
                    "description": "用户名，字符串类型。必填",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "IHttpInbound": {
            "properties": {
                "allocate": {
                    "$ref": "#/definitions/IV2rayAllocate",
                    "description": "端口分配设置"
                },
                "listen": {
                    "description": "监听地址，只允许 IP 地址，默认值为 \"0.0.0.0\"，表示接收所有网卡上的连接。除此之外，必须指定一个现有网卡的地址。\n\nv4.32.0+，支持填写 Unix domain socket，格式为绝对路径，形如 \"/dev/shm/domain.socket\"，可在开头加 \"@\" 代表 abstract (opens new window)，\"@@\" 则代表带 padding 的 abstract。\n\n填写 Unix domain socket 时，port 和 allocate 将被忽略，协议暂时可选 VLESS、VMess、Trojan，传输方式可选 TCP、WebSocket、HTTP/2。",
                    "type": "string"
                },
                "port": {
                    "description": "端口\n\n整型数值: 实际的端口号\n\n环境变量: 以\"env:\"开头，后面是一个环境变量的名称，如\"env:PORT\"。V2Ray 会以字符串形式解析这个环境变量。\n\n字符串: 可以是一个数值类型的字符串，如\"1234\"；或者一个数值范围，如\"5-10\"表示端口 5 到端口 10 这 6 个端口。",
                    "type": [
                        "string",
                        "number"
                    ]
                },
                "protocol": {
                    "description": "连接协议名称，可选的值见协议列表。",
                    "enum": [
                        "http"
                    ],
                    "type": "string"
                },
                "settings": {
                    "$ref": "#/definitions/IHttpInboundSettings",
                    "description": "具体的配置内容，视协议不同而不同"
                },
                "sniffing": {
                    "$ref": "#/definitions/IV2raySniffing",
                    "description": "尝试探测流量的类型"
                },
                "streamSettings": {
                    "$ref": "#/definitions/IV2rayStreamSetting",
                    "description": "底层传输配置"
                },
                "tag": {
                    "description": "此入站连接的标识，用于在其它的配置中定位此连接。当其不为空时，其值必须在所有tag中唯一",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "IHttpInboundSettings": {
            "properties": {
                "accounts": {
                    "description": "一个数组，数组中每个元素为一个用户帐号。默认值为空",
                    "items": {
                        "$ref": "#/definitions/IHttpAccountObject"
                    },
                    "type": "array"
                },
                "allowTransparent": {
                    "description": "当为true时，会转发所有 HTTP 请求，而非只是代理请求。若配置不当，开启此选项会导致死循环",
                    "type": "boolean"
                },
                "timeout": {
                    "description": "从客户端读取数据的超时设置（秒），0 表示不限时。默认值为 300。 V2Ray 3.1 后等价于对应用户等级的 connIdle 策略",
                    "type": "number"
                },
                "userLevel": {
                    "description": "用户等级，所有连接使用这一等级",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "IHttpOutbound": {
            "properties": {
                "mux": {
                    "description": "Mux 配置，Mux 功能是在一条 TCP 连接上分发多个 TCP 连接的数据",
                    "properties": {
                        "concurrency": {
                            "description": "最大并发连接数。最小值1，最大值1024，默认值8。这个数值表示了一个 TCP 连接上最多承载的 Mux 连接数量。当客户端发出了 8 个 TCP 请求，而concurrency=8时，V2Ray 只会发出一条实际的 TCP 连接，客户端的 8 个请求全部由这个 TCP 连接传输",
                            "type": "number"
                        },
                        "enabled": {
                            "description": "是否启用 Mux",
                            "type": "boolean"
                        }
                    },
                    "type": "object"
                },
                "protocol": {
                    "enum": [
                        "http"
                    ],
                    "type": "string"
                },
                "proxySettings": {
                    "additionalProperties": {
                    },
                    "description": "出站代理配置。当出站代理生效时，此出站协议的streamSettings将不起作用",
                    "properties": {
                        "tag": {
                            "description": "当指定另一个出站协议的标识时，此出站协议发出的数据，将被转发至所指定的出站协议发出",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "sendThrough": {
                    "description": "用于发送数据的 IP 地址，当主机有多个 IP 地址时有效，默认值为\"0.0.0.0\"",
                    "type": "string"
                },
                "settings": {
                    "$ref": "#/definitions/IHttpOutboundSettings",
                    "description": "具体的配置内容，视协议不同而不同"
                },
                "streamSettings": {
                    "$ref": "#/definitions/IV2rayStreamSetting",
                    "description": "底层传输配置"
                },
                "tag": {
                    "description": "此出站连接的标识，用于在其它的配置中定位此连接。当其值不为空时，必须在所有 tag 中唯一",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "IHttpOutboundSettings": {
            "properties": {
                "servers": {
                    "description": "HTTP 代理服务器配置，若配置多个，循环使用 (RoundRobin)。",
                    "items": {
                        "$ref": "#/definitions/IHttpServer"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "IHttpServer": {
            "properties": {
                "address": {
                    "description": "HTTP 代理服务器地址，必填。",
                    "type": "string"
                },
                "port": {
                    "description": "HTTP 代理服务器端口，必填。",
                    "type": "number"
                },
                "users": {
                    "description": "一个数组，数组中每个元素为一个用户帐号。默认值为空。",
                    "items": {
                        "$ref": "#/definitions/IHttpAccountObject"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "IHttpSettings": {
            "properties": {
                "host": {
                    "description": "一个字符串数组，每一个元素是一个域名。客户端会随机从列表中选出一个域名进行通信，服务器会验证域名是否在列表中",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "path": {
                    "description": "HTTP 路径，由/开头。客户端和服务器必须一致。可选参数，默认值为\"/\"",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "IKcpSettings": {
            "properties": {
                "congestion": {
                    "description": "是否启用拥塞控制，默认值为 false。开启拥塞控制之后，V2Ray 会自动监测网络质量，当丢包严重时，会自动降低吞吐量；当网络畅通时，也会适当增加吞吐量",
                    "type": "boolean"
                },
                "downlinkCapacity": {
                    "description": "下行链路容量，即主机接收数据所用的最大带宽，单位 MB/s，默认值 20。注意是 Byte 而非 bit。可以设置为 0，表示一个非常小的带宽",
                    "type": "number"
                },
                "header": {
                    "description": "数据包头部伪装设置",
                    "properties": {
                        "type": {
                            "$ref": "#/definitions/HeaderObjectType",
                            "description": "伪装类型"
                        }
                    },
                    "type": "object"
                },
                "mtu": {
                    "description": "最大传输单元（maximum transmission unit），请选择一个介于 576 - 1460 之间的值。默认值为 1350。",
                    "type": "number"
                },
                "readBufferSize": {
                    "description": "单个连接的读取缓冲区大小，单位是 MB。默认值为 2",
                    "type": "number"
                },
                "tti": {
                    "description": "传输时间间隔（transmission time interval），单位毫秒（ms），mKCP 将以这个时间频率发送数据。请选译一个介于 10 - 100 之间的值。默认值为 50",
                    "type": "number"
                },
                "uplinkCapacity": {
                    "description": "上行链路容量，即主机发出数据所用的最大带宽，单位 MB/s，默认值 5。注意是 Byte 而非 bit。可以设置为 0，表示一个非常小的带宽",
                    "type": "number"
                },
                "writeBufferSize": {
                    "description": "单个连接的写入缓冲区大小，单位是 MB。默认值为 2",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "ILevelPolicyObject": {
            "properties": {
                "bufferSize": {
                    "description": "每个连接的内部缓存大小。单位为 kB。当值为 0 时，内部缓存被禁用。\n\n默认值 (V2Ray 4.4+):\n\n在 ARM、MIPS、MIPSLE 平台上，默认值为 0。\n\n在 ARM64、MIPS64、MIPS64LE 平台上，默认值为 4。\n\n在其它平台上，默认值为 512。\n\n默认值 (V2Ray 4.3-):\n\n在 ARM、MIPS、MIPSLE、ARM64、MIPS64、MIPS64LE 平台上，默认值为 16。\n\n在其它平台上，默认值为 2048。",
                    "type": "number"
                },
                "connIdle": {
                    "description": "连接空闲的时间限制。单位为秒。默认值为 300。在入站出站代理处理一个连接时，如果在 connIdle 时间内，没有任何数据被传输（包括上行和下行数据），则中断该连接。",
                    "type": "number"
                },
                "downlinkOnly": {
                    "description": "当连接上行线路关闭后的时间限制。单位为秒。默认值为 5。当客户端（如浏览器）关闭上行连接时，入站代理会在等待 downlinkOnly 时间后中断连接。",
                    "type": "number"
                },
                "handshake": {
                    "description": "连接建立时的握手时间限制。单位为秒。默认值为 4。在入站代理处理一个新连接时，在握手阶段（比如 VMess 读取头部数据，判断目标服务器地址），如果使用的时间超过这个时间，则中断该连接。",
                    "type": "number"
                },
                "statsUserDownlink": {
                    "description": "当值为 true 时，开启当前等级的所有用户的下行流量统计。",
                    "type": "boolean"
                },
                "statsUserUplink": {
                    "description": "当值为 true 时，开启当前等级的所有用户的上行流量统计。",
                    "type": "boolean"
                },
                "uplinkOnly": {
                    "description": "当连接下行线路关闭后的时间限制。单位为秒。默认值为 2。当服务器（如远端网站）关闭下行连接时，出站代理会在等待 uplinkOnly 时间后中断连接。",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "IMTProtoAccount": {
            "properties": {
                "email": {
                    "description": "用户邮箱，用于统计流量等辅助功能",
                    "type": "string"
                },
                "level": {
                    "description": "用户等级",
                    "type": "number"
                },
                "secret": {
                    "description": "用户密钥。必须为 32 个字符，仅可包含0到9和a到f之间的字符",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "IMTProtoInbound": {
            "properties": {
                "allocate": {
                    "$ref": "#/definitions/IV2rayAllocate",
                    "description": "端口分配设置"
                },
                "listen": {
                    "description": "监听地址，只允许 IP 地址，默认值为 \"0.0.0.0\"，表示接收所有网卡上的连接。除此之外，必须指定一个现有网卡的地址。\n\nv4.32.0+，支持填写 Unix domain socket，格式为绝对路径，形如 \"/dev/shm/domain.socket\"，可在开头加 \"@\" 代表 abstract (opens new window)，\"@@\" 则代表带 padding 的 abstract。\n\n填写 Unix domain socket 时，port 和 allocate 将被忽略，协议暂时可选 VLESS、VMess、Trojan，传输方式可选 TCP、WebSocket、HTTP/2。",
                    "type": "string"
                },
                "port": {
                    "description": "端口\n\n整型数值: 实际的端口号\n\n环境变量: 以\"env:\"开头，后面是一个环境变量的名称，如\"env:PORT\"。V2Ray 会以字符串形式解析这个环境变量。\n\n字符串: 可以是一个数值类型的字符串，如\"1234\"；或者一个数值范围，如\"5-10\"表示端口 5 到端口 10 这 6 个端口。",
                    "type": [
                        "string",
                        "number"
                    ]
                },
                "protocol": {
                    "description": "连接协议名称，可选的值见协议列表。",
                    "enum": [
                        "mtproto"
                    ],
                    "type": "string"
                },
                "settings": {
                    "$ref": "#/definitions/IMTProtoInboundSettings",
                    "description": "具体的配置内容，视协议不同而不同"
                },
                "sniffing": {
                    "$ref": "#/definitions/IV2raySniffing",
                    "description": "尝试探测流量的类型"
                },
                "streamSettings": {
                    "$ref": "#/definitions/IV2rayStreamSetting",
                    "description": "底层传输配置"
                },
                "tag": {
                    "description": "此入站连接的标识，用于在其它的配置中定位此连接。当其不为空时，其值必须在所有tag中唯一",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "IMTProtoInboundSettings": {
            "properties": {
                "users": {
                    "description": "一个数组，其中每一个元素表示一个用户。目前只有第一个用户会生效",
                    "items": {
                        "$ref": "#/definitions/IMTProtoAccount"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "IMTProtoOutbound": {
            "properties": {
                "mux": {
                    "description": "Mux 配置，Mux 功能是在一条 TCP 连接上分发多个 TCP 连接的数据",
                    "properties": {
                        "concurrency": {
                            "description": "最大并发连接数。最小值1，最大值1024，默认值8。这个数值表示了一个 TCP 连接上最多承载的 Mux 连接数量。当客户端发出了 8 个 TCP 请求，而concurrency=8时，V2Ray 只会发出一条实际的 TCP 连接，客户端的 8 个请求全部由这个 TCP 连接传输",
                            "type": "number"
                        },
                        "enabled": {
                            "description": "是否启用 Mux",
                            "type": "boolean"
                        }
                    },
                    "type": "object"
                },
                "protocol": {
                    "enum": [
                        "mtproto"
                    ],
                    "type": "string"
                },
                "proxySettings": {
                    "additionalProperties": {
                    },
                    "description": "出站代理配置。当出站代理生效时，此出站协议的streamSettings将不起作用",
                    "properties": {
                        "tag": {
                            "description": "当指定另一个出站协议的标识时，此出站协议发出的数据，将被转发至所指定的出站协议发出",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "sendThrough": {
                    "description": "用于发送数据的 IP 地址，当主机有多个 IP 地址时有效，默认值为\"0.0.0.0\"",
                    "type": "string"
                },
                "settings": {
                    "$ref": "#/definitions/IMTProtoOutboundSettings",
                    "description": "具体的配置内容，视协议不同而不同"
                },
                "streamSettings": {
                    "$ref": "#/definitions/IV2rayStreamSetting",
                    "description": "底层传输配置"
                },
                "tag": {
                    "description": "此出站连接的标识，用于在其它的配置中定位此连接。当其值不为空时，必须在所有 tag 中唯一",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "IMTProtoOutboundSettings": {
            "type": "object"
        },
        "IQuicSettings": {
            "properties": {
                "header": {
                    "properties": {
                        "type": {
                            "$ref": "#/definitions/HeaderObjectType"
                        }
                    },
                    "type": "object"
                },
                "key": {
                    "description": "加密时所用的密钥。可以是任意字符串。当security不为\"none\"时有效",
                    "type": "string"
                },
                "security": {
                    "description": "加密方式。默认值为不加密",
                    "enum": [
                        "aes-128-gcm",
                        "chacha20-poly1305",
                        "none"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "IRoutingRule": {
            "properties": {
                "attrs": {
                    "description": "(V2Ray 4.18+) 一段脚本，用于检测流量的属性值。当此脚本返回真值时，此规则生效",
                    "type": "string"
                },
                "balancerTag": {
                    "description": "对应一个负载均衡器的标识。balancerTag和outboundTag须二选一。当同时指定时，outboundTag生效",
                    "type": "string"
                },
                "domain": {
                    "description": "一个数组，数组每一项是一个域名的匹配，详情 https://www.v2ray.com/chapter_02/03_routing.html#ruleobject",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "inboundTag": {
                    "description": "一个数组，数组内每一个元素是一个标识。当某一元素匹配入站协议的标识时，此规则生效",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "ip": {
                    "description": "一个数组，数组内每一个元素代表一个 IP 范围。当某一元素匹配目标 IP 时，此规则生效",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "network": {
                    "description": "可选的值有\"tcp\"、\"udp\"或\"tcp,udp\"，当连接方式是指定的方式时，此规则生效",
                    "enum": [
                        "tcp",
                        "tcp,udp",
                        "udp"
                    ],
                    "type": "string"
                },
                "outboundTag": {
                    "description": "对应一个额外出站连接配置的标识",
                    "type": "string"
                },
                "port": {
                    "description": "端口范围",
                    "type": [
                        "string",
                        "number"
                    ]
                },
                "protocol": {
                    "description": "一个数组，数组内每一个元素表示一种协议。当某一个协议匹配当前连接的流量时，此规则生效。必须开启入站代理中的sniffing选项",
                    "items": {
                        "enum": [
                            "bittorrent",
                            "http",
                            "tls"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "source": {
                    "description": "一个数组，数组内每一个元素是一个 IP 或 CIDR。当某一元素匹配来源 IP 时，此规则生效",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "sourcePort": {
                    "description": "`a-b`：a 和 b 均为正整数，且小于 65536。这个范围是一个前后闭合区间，当目标端口落在此范围内时，此规则生效。\n\n`a`：a 为正整数，且小于 65536。当目标端口为 a 时，此规则生效。\n\n（V2Ray 4.18+）以上两种形式的混合，以逗号 \",\" 分隔。形如：\"53,443,1000-2000\"。",
                    "type": [
                        "string",
                        "number"
                    ]
                },
                "type": {
                    "description": "目前只支持\"field\"这一个选项",
                    "enum": [
                        "field"
                    ],
                    "type": "string"
                },
                "user": {
                    "description": "一个数组，数组内每一个元素是一个邮箱地址。当某一元素匹配来源用户时，此规则生效。当前 Shadowsocks 和 VMess 支持此规则",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "IServerObject": {
            "properties": {
                "address": {
                    "description": "DNS 服务器地址，如\"8.8.8.8\"。目前只支持 UDP 协议的 DNS 服务器",
                    "type": "string"
                },
                "domains": {
                    "description": "一个域名列表，此列表包含的域名，将优先使用此服务器进行查询。域名格式和路由配置中相同",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "expectIps": {
                    "description": "（V2Ray 4.22.0+）一个 IP 范围列表，格式和 路由配置 中相同。\n\n当配置此项时，V2Ray DNS 会对返回的 IP 的进行校验，只返回包含 expectIPs 列表中的地址。\n\n如果未配置此项，会原样返回 IP 地址。",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "port": {
                    "description": "DNS 服务器端口，如53",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "IShadowSocksInbound": {
            "properties": {
                "allocate": {
                    "$ref": "#/definitions/IV2rayAllocate",
                    "description": "端口分配设置"
                },
                "listen": {
                    "description": "监听地址，只允许 IP 地址，默认值为 \"0.0.0.0\"，表示接收所有网卡上的连接。除此之外，必须指定一个现有网卡的地址。\n\nv4.32.0+，支持填写 Unix domain socket，格式为绝对路径，形如 \"/dev/shm/domain.socket\"，可在开头加 \"@\" 代表 abstract (opens new window)，\"@@\" 则代表带 padding 的 abstract。\n\n填写 Unix domain socket 时，port 和 allocate 将被忽略，协议暂时可选 VLESS、VMess、Trojan，传输方式可选 TCP、WebSocket、HTTP/2。",
                    "type": "string"
                },
                "port": {
                    "description": "端口\n\n整型数值: 实际的端口号\n\n环境变量: 以\"env:\"开头，后面是一个环境变量的名称，如\"env:PORT\"。V2Ray 会以字符串形式解析这个环境变量。\n\n字符串: 可以是一个数值类型的字符串，如\"1234\"；或者一个数值范围，如\"5-10\"表示端口 5 到端口 10 这 6 个端口。",
                    "type": [
                        "string",
                        "number"
                    ]
                },
                "protocol": {
                    "description": "连接协议名称，可选的值见协议列表。",
                    "enum": [
                        "shadowsocks"
                    ],
                    "type": "string"
                },
                "settings": {
                    "$ref": "#/definitions/IShadowSocksInboundSettings",
                    "description": "具体的配置内容，视协议不同而不同"
                },
                "sniffing": {
                    "$ref": "#/definitions/IV2raySniffing",
                    "description": "尝试探测流量的类型"
                },
                "streamSettings": {
                    "$ref": "#/definitions/IV2rayStreamSetting",
                    "description": "底层传输配置"
                },
                "tag": {
                    "description": "此入站连接的标识，用于在其它的配置中定位此连接。当其不为空时，其值必须在所有tag中唯一",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "IShadowSocksInboundSettings": {
            "properties": {
                "email": {
                    "description": "邮件地址，可选，用于标识用户",
                    "type": "string"
                },
                "level": {
                    "description": "用户等级，默认值为 0",
                    "type": "number"
                },
                "method": {
                    "$ref": "#/definitions/ShadowSocksMethod",
                    "description": "必填。可选的值见加密方式列表"
                },
                "network": {
                    "description": "可接收的网络连接类型，默认值为\"tcp\"",
                    "enum": [
                        "tcp",
                        "tcp,udp",
                        "udp"
                    ],
                    "type": "string"
                },
                "password": {
                    "description": "必填，任意字符串。Shadowsocks 协议不限制密码长度，但短密码会更可能被破解，建议使用 16 字符或更长的密码",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "IShadowSocksServer": {
            "properties": {
                "address": {
                    "description": "Shadowsocks 服务器地址，支持 IPv4、IPv6 和域名。必填",
                    "type": "string"
                },
                "email": {
                    "description": "邮件地址，可选，用于标识用户",
                    "type": "string"
                },
                "level": {
                    "description": "用户等级",
                    "type": "number"
                },
                "method": {
                    "$ref": "#/definitions/ShadowSocksMethod",
                    "description": "必填。可选的值见加密方式列表"
                },
                "ota": {
                    "description": "是否开启 Shadowsocks 的一次验证（One time auth），默认值为false",
                    "type": "boolean"
                },
                "password": {
                    "description": "必填。任意字符串。Shadowsocks 协议不限制密码长度，但短密码会更可能被破解，建议使用 16 字符或更长的密码",
                    "type": "string"
                },
                "port": {
                    "description": "Shadowsocks 服务器端口。必填",
                    "type": [
                        "string",
                        "number"
                    ]
                }
            },
            "type": "object"
        },
        "IShadowsocksOutbound": {
            "properties": {
                "mux": {
                    "description": "Mux 配置，Mux 功能是在一条 TCP 连接上分发多个 TCP 连接的数据",
                    "properties": {
                        "concurrency": {
                            "description": "最大并发连接数。最小值1，最大值1024，默认值8。这个数值表示了一个 TCP 连接上最多承载的 Mux 连接数量。当客户端发出了 8 个 TCP 请求，而concurrency=8时，V2Ray 只会发出一条实际的 TCP 连接，客户端的 8 个请求全部由这个 TCP 连接传输",
                            "type": "number"
                        },
                        "enabled": {
                            "description": "是否启用 Mux",
                            "type": "boolean"
                        }
                    },
                    "type": "object"
                },
                "protocol": {
                    "enum": [
                        "shadowsocks"
                    ],
                    "type": "string"
                },
                "proxySettings": {
                    "additionalProperties": {
                    },
                    "description": "出站代理配置。当出站代理生效时，此出站协议的streamSettings将不起作用",
                    "properties": {
                        "tag": {
                            "description": "当指定另一个出站协议的标识时，此出站协议发出的数据，将被转发至所指定的出站协议发出",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "sendThrough": {
                    "description": "用于发送数据的 IP 地址，当主机有多个 IP 地址时有效，默认值为\"0.0.0.0\"",
                    "type": "string"
                },
                "settings": {
                    "$ref": "#/definitions/IShadowsocksOutboundSettings",
                    "description": "具体的配置内容，视协议不同而不同"
                },
                "streamSettings": {
                    "$ref": "#/definitions/IV2rayStreamSetting",
                    "description": "底层传输配置"
                },
                "tag": {
                    "description": "此出站连接的标识，用于在其它的配置中定位此连接。当其值不为空时，必须在所有 tag 中唯一",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "IShadowsocksOutboundSettings": {
            "properties": {
                "servers": {
                    "description": "一个数组，其中每一项是一个 ServerObject",
                    "items": {
                        "$ref": "#/definitions/IShadowSocksServer"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ISockoptObject": {
            "properties": {
                "mark": {
                    "description": "一个整数。当其值非零时，在出站连接上标记 SO_MARK。\n\n仅适用于 Linux 系统。\n\n需要 CAP_NET_ADMIN 权限。",
                    "type": "number"
                },
                "tcpFastOpen": {
                    "description": "是否启用 TCP Fast Open (opens new window)。当其值为 true 时，强制开启 TFO；当其值为 false 时，强制关闭 TFO；当此项不存在时，使用系统默认设置。可用于入站出站连接。\n\n仅在以下版本（或更新版本）的操作系统中可用:\n- Windows 10 (1604)\n- Mac OS 10.11 / iOS 9\n- Linux 3.16：系统已默认开启，无需配置。",
                    "type": "boolean"
                },
                "tproxy": {
                    "description": "是否开启透明代理（仅适用于 Linux）。\n\n- \"redirect\"：使用 Redirect 模式的透明代理。仅支持 TCP/IPv4 和 UDP 连接。\n- \"tproxy\"：使用 TProxy 模式的透明代理。支持 TCP 和 UDP 连接。\n- \"off\"：关闭透明代理。\n\n透明代理需要 Root 或 CAP_NET_ADMIN 权限。",
                    "enum": [
                        "off",
                        "redirect",
                        "tproxy"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ISocksAccountObject": {
            "properties": {
                "level": {
                    "description": "用户等级",
                    "type": "number"
                },
                "pass": {
                    "description": "密码",
                    "type": "string"
                },
                "user": {
                    "description": "用户名",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ISocksInbound": {
            "properties": {
                "allocate": {
                    "$ref": "#/definitions/IV2rayAllocate",
                    "description": "端口分配设置"
                },
                "listen": {
                    "description": "监听地址，只允许 IP 地址，默认值为 \"0.0.0.0\"，表示接收所有网卡上的连接。除此之外，必须指定一个现有网卡的地址。\n\nv4.32.0+，支持填写 Unix domain socket，格式为绝对路径，形如 \"/dev/shm/domain.socket\"，可在开头加 \"@\" 代表 abstract (opens new window)，\"@@\" 则代表带 padding 的 abstract。\n\n填写 Unix domain socket 时，port 和 allocate 将被忽略，协议暂时可选 VLESS、VMess、Trojan，传输方式可选 TCP、WebSocket、HTTP/2。",
                    "type": "string"
                },
                "port": {
                    "description": "端口\n\n整型数值: 实际的端口号\n\n环境变量: 以\"env:\"开头，后面是一个环境变量的名称，如\"env:PORT\"。V2Ray 会以字符串形式解析这个环境变量。\n\n字符串: 可以是一个数值类型的字符串，如\"1234\"；或者一个数值范围，如\"5-10\"表示端口 5 到端口 10 这 6 个端口。",
                    "type": [
                        "string",
                        "number"
                    ]
                },
                "protocol": {
                    "description": "连接协议名称，可选的值见协议列表。",
                    "enum": [
                        "socks"
                    ],
                    "type": "string"
                },
                "settings": {
                    "$ref": "#/definitions/ISocksInboundSettings",
                    "description": "具体的配置内容，视协议不同而不同"
                },
                "sniffing": {
                    "$ref": "#/definitions/IV2raySniffing",
                    "description": "尝试探测流量的类型"
                },
                "streamSettings": {
                    "$ref": "#/definitions/IV2rayStreamSetting",
                    "description": "底层传输配置"
                },
                "tag": {
                    "description": "此入站连接的标识，用于在其它的配置中定位此连接。当其不为空时，其值必须在所有tag中唯一",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ISocksInboundSettings": {
            "properties": {
                "accounts": {
                    "description": "一个数组，数组中每个元素为一个用户帐号。默认值为空。此选项仅当 auth 为 password 时有效",
                    "items": {
                        "$ref": "#/definitions/IVLESSAccountObject"
                    },
                    "type": "array"
                },
                "auth": {
                    "description": "Socks 协议的认证方式，支持\"noauth\"匿名方式和\"password\"用户密码方式。默认值为\"noauth\"",
                    "enum": [
                        "noauth",
                        "password"
                    ],
                    "type": "string"
                },
                "ip": {
                    "description": "当开启 UDP 时，V2Ray 需要知道本机的 IP 地址。默认值为\"127.0.0.1\"",
                    "type": "string"
                },
                "udp": {
                    "description": "是否开启 UDP 协议的支持。默认值为 false",
                    "type": "boolean"
                },
                "userLevel": {
                    "description": "用户等级，所有连接使用这一等级",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "ISocksOutbound": {
            "properties": {
                "mux": {
                    "description": "Mux 配置，Mux 功能是在一条 TCP 连接上分发多个 TCP 连接的数据",
                    "properties": {
                        "concurrency": {
                            "description": "最大并发连接数。最小值1，最大值1024，默认值8。这个数值表示了一个 TCP 连接上最多承载的 Mux 连接数量。当客户端发出了 8 个 TCP 请求，而concurrency=8时，V2Ray 只会发出一条实际的 TCP 连接，客户端的 8 个请求全部由这个 TCP 连接传输",
                            "type": "number"
                        },
                        "enabled": {
                            "description": "是否启用 Mux",
                            "type": "boolean"
                        }
                    },
                    "type": "object"
                },
                "protocol": {
                    "enum": [
                        "socks"
                    ],
                    "type": "string"
                },
                "proxySettings": {
                    "additionalProperties": {
                    },
                    "description": "出站代理配置。当出站代理生效时，此出站协议的streamSettings将不起作用",
                    "properties": {
                        "tag": {
                            "description": "当指定另一个出站协议的标识时，此出站协议发出的数据，将被转发至所指定的出站协议发出",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "sendThrough": {
                    "description": "用于发送数据的 IP 地址，当主机有多个 IP 地址时有效，默认值为\"0.0.0.0\"",
                    "type": "string"
                },
                "settings": {
                    "$ref": "#/definitions/ISocksOutboundSettings",
                    "description": "具体的配置内容，视协议不同而不同"
                },
                "streamSettings": {
                    "$ref": "#/definitions/IV2rayStreamSetting",
                    "description": "底层传输配置"
                },
                "tag": {
                    "description": "此出站连接的标识，用于在其它的配置中定位此连接。当其值不为空时，必须在所有 tag 中唯一",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ISocksOutboundSettings": {
            "additionalProperties": {
            },
            "properties": {
                "servers": {
                    "description": "Socks 服务器列表，其中每一项是一个服务器配置",
                    "items": {
                        "$ref": "#/definitions/ISocksServer"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ISocksServer": {
            "properties": {
                "address": {
                    "description": "服务器地址，仅支持连接到 Socks 5 服务器",
                    "type": "string"
                },
                "port": {
                    "description": "服务器端口",
                    "type": "number"
                },
                "users": {
                    "description": "用户列表，其中每一项一个用户配置。当列表不为空时，Socks 客户端会使用此用户信息进行认证；如未指定，则不进行认证",
                    "items": {
                        "$ref": "#/definitions/ISocksAccountObject"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "IStrategy": {
            "enum": [
                "AsIs",
                "IPIfNonMatch",
                "IPOnDemand"
            ],
            "type": "string"
        },
        "ISystemObject": {
            "properties": {
                "statsInboundDownlink": {
                    "description": "当值为 true 时，开启所有入站代理的下行流量统计。",
                    "type": "boolean"
                },
                "statsInboundUplink": {
                    "description": "当值为 true 时，开启所有入站代理的上行流量统计。",
                    "type": "boolean"
                },
                "statsOutboundDownlink": {
                    "description": "（ V2Ray 4.26.0+ ） 当值为 true 时，开启所有出站代理的下行流量统计。",
                    "type": "boolean"
                },
                "statsOutboundUplink": {
                    "description": "（ V2Ray 4.26.0+ ）当值为 true 时，开启所有出站代理的上行流量统计。",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "ITcpSettings": {
            "properties": {
                "header": {
                    "anyOf": [
                        {
                            "properties": {
                                "request": {
                                    "additionalProperties": {
                                    },
                                    "type": "object"
                                },
                                "response": {
                                    "additionalProperties": {
                                    },
                                    "type": "object"
                                },
                                "type": {
                                    "description": "指定进行 HTTP 伪装",
                                    "enum": [
                                        "http"
                                    ],
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        {
                            "properties": {
                                "type": {
                                    "description": "指定不进行伪装",
                                    "enum": [
                                        "none"
                                    ],
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    ]
                }
            },
            "type": "object"
        },
        "ITlsSetting": {
            "properties": {
                "allowInsecure": {
                    "description": "是否允许不安全连接（仅用于客户端）。默认值为 false。当值为 true 时，V2Ray 不会检查远端主机所提供的 TLS 证书的有效性。",
                    "type": "boolean"
                },
                "alpn": {
                    "description": "一个字符串数组，指定了 TLS 握手时指定的 ALPN 数值。默认值为 [\"h2\", \"http/1.1\"]。",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "certificates": {
                    "description": "证书列表，其中每一项表示一个证书（建议 fullchain）。",
                    "items": {
                        "$ref": "#/definitions/ICertificateObject"
                    },
                    "type": "array"
                },
                "disableSystemRoot": {
                    "description": "（V2Ray 4.18+）是否禁用操作系统自带的 CA 证书。默认值为 false。当值为 true 时，V2Ray 只会使用 certificates 中指定的证书进行 TLS 握手。当值为 false 时，V2Ray 只会使用操作系统自带的 CA 证书进行 TLS 握手。",
                    "type": "boolean"
                },
                "serverName": {
                    "description": "指定服务器端证书的域名，在连接由 IP 建立时有用。当目标连接由域名指定时，比如在 Socks 入站时接收到了域名，或者由 Sniffing 功能探测出了域名，这个域名会自动用于 serverName，无须手动配置。",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ITrojanAccountObject": {
            "properties": {
                "email": {
                    "description": "邮件地址，可选，用于标识用户",
                    "type": "string"
                },
                "level": {
                    "description": "用户等级，默认值为 0。详见 本地策略。",
                    "type": "number"
                },
                "password": {
                    "description": "必填，任意字符串。",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ITrojanInbound": {
            "properties": {
                "allocate": {
                    "$ref": "#/definitions/IV2rayAllocate",
                    "description": "端口分配设置"
                },
                "listen": {
                    "description": "监听地址，只允许 IP 地址，默认值为 \"0.0.0.0\"，表示接收所有网卡上的连接。除此之外，必须指定一个现有网卡的地址。\n\nv4.32.0+，支持填写 Unix domain socket，格式为绝对路径，形如 \"/dev/shm/domain.socket\"，可在开头加 \"@\" 代表 abstract (opens new window)，\"@@\" 则代表带 padding 的 abstract。\n\n填写 Unix domain socket 时，port 和 allocate 将被忽略，协议暂时可选 VLESS、VMess、Trojan，传输方式可选 TCP、WebSocket、HTTP/2。",
                    "type": "string"
                },
                "port": {
                    "description": "端口\n\n整型数值: 实际的端口号\n\n环境变量: 以\"env:\"开头，后面是一个环境变量的名称，如\"env:PORT\"。V2Ray 会以字符串形式解析这个环境变量。\n\n字符串: 可以是一个数值类型的字符串，如\"1234\"；或者一个数值范围，如\"5-10\"表示端口 5 到端口 10 这 6 个端口。",
                    "type": [
                        "string",
                        "number"
                    ]
                },
                "protocol": {
                    "description": "连接协议名称，可选的值见协议列表。",
                    "enum": [
                        "trojan"
                    ],
                    "type": "string"
                },
                "settings": {
                    "$ref": "#/definitions/ITrojanInboundSettings",
                    "description": "具体的配置内容，视协议不同而不同"
                },
                "sniffing": {
                    "$ref": "#/definitions/IV2raySniffing",
                    "description": "尝试探测流量的类型"
                },
                "streamSettings": {
                    "$ref": "#/definitions/IV2rayStreamSetting",
                    "description": "底层传输配置"
                },
                "tag": {
                    "description": "此入站连接的标识，用于在其它的配置中定位此连接。当其不为空时，其值必须在所有tag中唯一",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ITrojanInboundSettings": {
            "properties": {
                "clients": {
                    "items": {
                        "$ref": "#/definitions/ITrojanAccountObject"
                    },
                    "type": "array"
                },
                "fallbacks": {
                    "items": {
                        "$ref": "#/definitions/IFallbacksObject"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ITrojanOutbound": {
            "properties": {
                "mux": {
                    "description": "Mux 配置，Mux 功能是在一条 TCP 连接上分发多个 TCP 连接的数据",
                    "properties": {
                        "concurrency": {
                            "description": "最大并发连接数。最小值1，最大值1024，默认值8。这个数值表示了一个 TCP 连接上最多承载的 Mux 连接数量。当客户端发出了 8 个 TCP 请求，而concurrency=8时，V2Ray 只会发出一条实际的 TCP 连接，客户端的 8 个请求全部由这个 TCP 连接传输",
                            "type": "number"
                        },
                        "enabled": {
                            "description": "是否启用 Mux",
                            "type": "boolean"
                        }
                    },
                    "type": "object"
                },
                "protocol": {
                    "enum": [
                        "trojan"
                    ],
                    "type": "string"
                },
                "proxySettings": {
                    "additionalProperties": {
                    },
                    "description": "出站代理配置。当出站代理生效时，此出站协议的streamSettings将不起作用",
                    "properties": {
                        "tag": {
                            "description": "当指定另一个出站协议的标识时，此出站协议发出的数据，将被转发至所指定的出站协议发出",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "sendThrough": {
                    "description": "用于发送数据的 IP 地址，当主机有多个 IP 地址时有效，默认值为\"0.0.0.0\"",
                    "type": "string"
                },
                "settings": {
                    "$ref": "#/definitions/ITrojanOutboundSettings",
                    "description": "具体的配置内容，视协议不同而不同"
                },
                "streamSettings": {
                    "$ref": "#/definitions/IV2rayStreamSetting",
                    "description": "底层传输配置"
                },
                "tag": {
                    "description": "此出站连接的标识，用于在其它的配置中定位此连接。当其值不为空时，必须在所有 tag 中唯一",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ITrojanOutboundSettings": {
            "properties": {
                "servers": {
                    "description": "一个数组，其中每一项是一个 ServerObject。",
                    "items": {
                        "$ref": "#/definitions/ITrojanServer"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "ITrojanServer": {
            "properties": {
                "address": {
                    "description": "服务器地址，支持 IPv4、IPv6 和域名。必填。",
                    "type": "string"
                },
                "email": {
                    "description": "邮件地址，可选，用于标识用户",
                    "type": "string"
                },
                "level": {
                    "description": "用户等级",
                    "type": "number"
                },
                "password": {
                    "description": "必填，任意字符串。",
                    "type": "string"
                },
                "port": {
                    "description": "服务器端口，必填。",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "IV2rayAPI": {
            "properties": {
                "services": {
                    "description": "开启的 API 列表",
                    "items": {
                        "enum": [
                            "HandlerService",
                            "LoggerService",
                            "StatsService"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "tag": {
                    "description": "出站代理标识",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "IV2rayAllocate": {
            "properties": {
                "concurrency": {
                    "description": "随机端口数量。最小值为1，最大值为port范围的三分之一。建议值为3",
                    "type": "number"
                },
                "refresh": {
                    "description": "随机端口刷新间隔，单位为分钟。最小值为2，建议值为5。这个属性仅当strategy = random时有效",
                    "type": "number"
                },
                "strategy": {
                    "description": "端口分配策略。\"always\"表示总是分配所有已指定的端口，port中指定了多少个端口，V2Ray 就会监听这些端口。\"random\"表示随机开放端口，每隔refresh分钟在port范围中随机选取concurrency个端口来监听",
                    "enum": [
                        "always",
                        "random"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "IV2rayDNS": {
            "properties": {
                "clientIp": {
                    "description": "当前系统的 IP 地址，用于 DNS 查询时，通知服务器客户端的所在位置。不能是私有地址",
                    "type": "string"
                },
                "hosts": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "静态 IP 列表，其值为一系列的\"域名\":\"地址\"。其中地址可以是 IP 或者域名。在解析域名时，如果域名匹配这个列表中的某一项，当该项的地址为 IP 时，则解析结果为该项的 IP，而不会使用下述的 servers 进行解析；当该项的地址为域名时，会使用此域名进行 IP 解析，而不使用原始域名",
                    "type": "object"
                },
                "servers": {
                    "description": "一个 DNS 服务器列表，支持的类型有三种：IP 地址（字符串形式），ServerObject，或者\"localhost\"",
                    "items": {
                        "anyOf": [
                            {
                                "$ref": "#/definitions/IServerObject"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "type": "array"
                },
                "tag": {
                    "description": "(V2Ray 4.13+) 由此 DNS 发出的查询流量，除localhost外，都会带有此标识，可在路由使用inboundTag进行匹配",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "IV2rayLog": {
            "properties": {
                "access": {
                    "description": "访问日志的文件地址，其值是一个合法的文件地址，如\"/tmp/v2ray/_access.log\"（Linux）或者\"C:\\Temp\\v2ray\\_access.log\"（Windows）。当此项不指定或为空值时，表示将日志输出至 stdout",
                    "type": "string"
                },
                "error": {
                    "description": "错误日志的文件地址，其值是一个合法的文件地址，如\"/tmp/v2ray/_error.log\"（Linux）或者\"C:\\Temp\\v2ray\\_error.log\"（Windows）。当此项不指定或为空值时，表示将日志输出至 stdout",
                    "type": "string"
                },
                "loglevel": {
                    "$ref": "#/definitions/LogLevel",
                    "description": "错误日志的级别。默认值为\"warning\""
                }
            },
            "type": "object"
        },
        "IV2rayPolicy": {
            "properties": {
                "levels": {
                    "additionalProperties": {
                        "$ref": "#/definitions/ILevelPolicyObject"
                    },
                    "description": "一组键值对，每个键是一个字符串形式的数字（JSON 的要求），比如 \"0\"、\"1\" 等，双引号不能省略，这个数字对应用户等级",
                    "type": "object"
                },
                "system": {
                    "additionalProperties": {
                        "$ref": "#/definitions/ISystemObject"
                    },
                    "description": "V2Ray 系统的策略",
                    "type": "object"
                }
            },
            "type": "object"
        },
        "IV2rayRouting": {
            "properties": {
                "balancers": {
                    "description": "(V2Ray 4.4+)一个数组，数组中每个元素是一个负载均衡器的配置。当一个规则指向一个负载均衡器时，V2Ray 会通过此负载均衡器选出一个出站协议，然后由它转发流量",
                    "items": {
                        "$ref": "#/definitions/IBalancerObject"
                    },
                    "type": "array"
                },
                "domainStrategy": {
                    "$ref": "#/definitions/IStrategy",
                    "description": "域名解析策略，根据不同的设置使用不同的策略"
                },
                "rules": {
                    "description": "对应一个数组，数组中每个元素是一个规则。对于每一个连接，路由将根据这些规则依次进行判断，当一个规则生效时，即将这个连接转发至它所指定的outboundTag(或balancerTag，V2Ray 4.4+)。当没有匹配到任何规则时，流量默认由主出站协议发出",
                    "items": {
                        "$ref": "#/definitions/IRoutingRule"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "IV2raySniffing": {
            "properties": {
                "destOverride": {
                    "description": "当流量为指定类型时，按其中包括的目标地址重置当前连接的目标",
                    "items": {
                        "enum": [
                            "http",
                            "tls"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "enabled": {
                    "description": "是否开启流量探测",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "IV2rayStreamSetting": {
            "properties": {
                "dsSettings": {
                    "$ref": "#/definitions/IDsSettings",
                    "description": "针于Domain Socket 连接的配置"
                },
                "httpSettings": {
                    "$ref": "#/definitions/IHttpSettings",
                    "description": "针对 HTTP/2 连接的配置"
                },
                "kcpSettings": {
                    "$ref": "#/definitions/IKcpSettings",
                    "description": "针对 KCP 连接的配置"
                },
                "network": {
                    "description": "数据流所使用的网络类型，默认值为 \"tcp\"",
                    "enum": [
                        "domainsocket",
                        "http",
                        "kcp",
                        "quic",
                        "tcp",
                        "ws"
                    ],
                    "type": "string"
                },
                "quicSettings": {
                    "$ref": "#/definitions/IQuicSettings",
                    "description": "(V2Ray 4.7+) 针于QUIC 连接的配置\nQUIC 的配置对应传输配置中的 quicSettings 项。对接的两端的配置必须完全一致，否则连接失败。QUIC 强制要求开启 TLS，在传输配置中没有开启 TLS 时，V2Ray 会自行签发一个证书进行 TLS 通讯。在使用 QUIC 传输时，可以关闭 VMess 的加密"
                },
                "security": {
                    "description": "是否启入传输层加密，支持的选项有 \"none\" 表示不加密（默认值），\"tls\" 表示使用 TLS",
                    "enum": [
                        "none",
                        "tls"
                    ],
                    "type": "string"
                },
                "sockopt": {
                    "$ref": "#/definitions/ISockoptObject",
                    "description": "连接选项"
                },
                "tcpSettings": {
                    "$ref": "#/definitions/ITcpSettings",
                    "description": "针对 TCP 连接的配置"
                },
                "tlsSettings": {
                    "$ref": "#/definitions/ITlsSetting",
                    "description": "TLS 配置。TLS 由 Golang 提供，支持 TLS 1.3，不支持 DTLS。"
                },
                "wsSettings": {
                    "$ref": "#/definitions/IWsSettings",
                    "description": "针对 WebSocket 连接的配置"
                }
            },
            "type": "object"
        },
        "IV2rayTransport": {
            "description": "TransportObject对应配置文件的transport项",
            "properties": {
                "dsSettings": {
                    "$ref": "#/definitions/IDsSettings",
                    "description": "针于Domain Socket 连接的配置"
                },
                "httpSettings": {
                    "$ref": "#/definitions/IHttpSettings",
                    "description": "针对 HTTP/2 连接的配置"
                },
                "kcpSettings": {
                    "$ref": "#/definitions/IKcpSettings",
                    "description": "针对 KCP 连接的配置"
                },
                "quicSettings": {
                    "$ref": "#/definitions/IQuicSettings",
                    "description": "(V2Ray 4.7+) 针于QUIC 连接的配置\nQUIC 的配置对应传输配置中的 quicSettings 项。对接的两端的配置必须完全一致，否则连接失败。QUIC 强制要求开启 TLS，在传输配置中没有开启 TLS 时，V2Ray 会自行签发一个证书进行 TLS 通讯。在使用 QUIC 传输时，可以关闭 VMess 的加密"
                },
                "tcpSettings": {
                    "$ref": "#/definitions/ITcpSettings",
                    "description": "针对 TCP 连接的配置"
                },
                "wsSettings": {
                    "$ref": "#/definitions/IWsSettings",
                    "description": "针对 WebSocket 连接的配置"
                }
            },
            "type": "object"
        },
        "IVLESSAccountObject": {
            "properties": {
                "email": {
                    "description": "用户邮箱，用于区分不同用户的流量（日志、统计）。",
                    "type": "string"
                },
                "id": {
                    "description": "VLESS 的用户 ID，必须是一个合法的 UUID，你也可以用 V2Ctl 生成它。",
                    "type": "string"
                },
                "level": {
                    "description": "用户等级，详见 本地策略。",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "IVLESSInbound": {
            "properties": {
                "allocate": {
                    "$ref": "#/definitions/IV2rayAllocate",
                    "description": "端口分配设置"
                },
                "listen": {
                    "description": "监听地址，只允许 IP 地址，默认值为 \"0.0.0.0\"，表示接收所有网卡上的连接。除此之外，必须指定一个现有网卡的地址。\n\nv4.32.0+，支持填写 Unix domain socket，格式为绝对路径，形如 \"/dev/shm/domain.socket\"，可在开头加 \"@\" 代表 abstract (opens new window)，\"@@\" 则代表带 padding 的 abstract。\n\n填写 Unix domain socket 时，port 和 allocate 将被忽略，协议暂时可选 VLESS、VMess、Trojan，传输方式可选 TCP、WebSocket、HTTP/2。",
                    "type": "string"
                },
                "port": {
                    "description": "端口\n\n整型数值: 实际的端口号\n\n环境变量: 以\"env:\"开头，后面是一个环境变量的名称，如\"env:PORT\"。V2Ray 会以字符串形式解析这个环境变量。\n\n字符串: 可以是一个数值类型的字符串，如\"1234\"；或者一个数值范围，如\"5-10\"表示端口 5 到端口 10 这 6 个端口。",
                    "type": [
                        "string",
                        "number"
                    ]
                },
                "protocol": {
                    "description": "连接协议名称，可选的值见协议列表。",
                    "enum": [
                        "vless"
                    ],
                    "type": "string"
                },
                "settings": {
                    "$ref": "#/definitions/IVLESSInboundSettings",
                    "description": "具体的配置内容，视协议不同而不同"
                },
                "sniffing": {
                    "$ref": "#/definitions/IV2raySniffing",
                    "description": "尝试探测流量的类型"
                },
                "streamSettings": {
                    "$ref": "#/definitions/IV2rayStreamSetting",
                    "description": "底层传输配置"
                },
                "tag": {
                    "description": "此入站连接的标识，用于在其它的配置中定位此连接。当其不为空时，其值必须在所有tag中唯一",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "IVLESSInboundSettings": {
            "properties": {
                "clients": {
                    "description": "一组服务端认可的用户。",
                    "items": {
                        "$ref": "#/definitions/IVLESSAccountObject"
                    },
                    "type": "array"
                },
                "decryption": {
                    "description": "注意这里是 decryption，和 clients 同级。现阶段同样需要填 \"none\"，不能留空。decryption 和 encryption 的位置不同，是因为若套一层约定加密，服务端需要先解密才能知道是哪个用户。\n\n若未正确设置 decryption 的值，使用 v2ray 或 -test 时会收到错误信息。",
                    "enum": [
                        "none"
                    ],
                    "type": "string"
                },
                "fallbacks": {
                    "description": "一个数组，包含一系列强大的回落分流配置（可选）。",
                    "items": {
                        "$ref": "#/definitions/IFallbacksObject"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "IVLESSOutbound": {
            "properties": {
                "protocol": {
                    "enum": [
                        "vless"
                    ],
                    "type": "string"
                },
                "settings": {
                    "$ref": "#/definitions/IVLESSOutboundSettings"
                }
            },
            "type": "object"
        },
        "IVLESSOutboundSettings": {
            "properties": {
                "vnext": {
                    "description": "一个数组，包含一系列指向服务端的配置。\n\n#",
                    "items": {
                        "$ref": "#/definitions/IVLESSServerObject"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "IVLESSServerAccountObject": {
            "properties": {
                "encryption": {
                    "description": "现阶段需要填 \"none\"，不能留空。该要求是为了提醒使用者没有加密，也为了以后出加密方式时，防止使用者填错属性名或填错位置导致裸奔。\n\n若未正确设置 encryption 的值，使用 v2ray 或 -test 时会收到错误信息。",
                    "enum": [
                        "none"
                    ],
                    "type": "string"
                },
                "id": {
                    "description": "VLESS 的用户 ID，必须是一个合法的 UUID，你可以用 在线工具 生成它。",
                    "type": "string"
                },
                "level": {
                    "description": "用户等级，详见 本地策略。",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "IVLESSServerObject": {
            "properties": {
                "address": {
                    "description": "地址，指向服务端，支持域名、IPv4、IPv6。",
                    "type": "string"
                },
                "port": {
                    "description": "端口，通常与服务端监听的端口相同。",
                    "type": "number"
                },
                "users": {
                    "description": "一组服务端认可的用户。",
                    "items": {
                        "$ref": "#/definitions/IVLESSServerAccountObject"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "IVmessAccount": {
            "properties": {
                "alterId": {
                    "description": "为了进一步防止被探测，一个用户可以在主 ID 的基础上，再额外生成多个 ID。这里只需要指定额外的 ID 的数量，推荐值为 4。不指定的话，默认值是 0。最大值 65535。这个值不能超过服务器端所指定的值",
                    "type": "number"
                },
                "email": {
                    "description": "用户邮箱地址，用于区分不同用户的流量",
                    "type": "string"
                },
                "id": {
                    "description": "VMess 的用户 ID。必须是一个合法的 UUID",
                    "type": "string"
                },
                "level": {
                    "description": "用户等级",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "IVmessInbound": {
            "properties": {
                "allocate": {
                    "$ref": "#/definitions/IV2rayAllocate",
                    "description": "端口分配设置"
                },
                "listen": {
                    "description": "监听地址，只允许 IP 地址，默认值为 \"0.0.0.0\"，表示接收所有网卡上的连接。除此之外，必须指定一个现有网卡的地址。\n\nv4.32.0+，支持填写 Unix domain socket，格式为绝对路径，形如 \"/dev/shm/domain.socket\"，可在开头加 \"@\" 代表 abstract (opens new window)，\"@@\" 则代表带 padding 的 abstract。\n\n填写 Unix domain socket 时，port 和 allocate 将被忽略，协议暂时可选 VLESS、VMess、Trojan，传输方式可选 TCP、WebSocket、HTTP/2。",
                    "type": "string"
                },
                "port": {
                    "description": "端口\n\n整型数值: 实际的端口号\n\n环境变量: 以\"env:\"开头，后面是一个环境变量的名称，如\"env:PORT\"。V2Ray 会以字符串形式解析这个环境变量。\n\n字符串: 可以是一个数值类型的字符串，如\"1234\"；或者一个数值范围，如\"5-10\"表示端口 5 到端口 10 这 6 个端口。",
                    "type": [
                        "string",
                        "number"
                    ]
                },
                "protocol": {
                    "description": "连接协议名称，可选的值见协议列表。",
                    "enum": [
                        "vmess"
                    ],
                    "type": "string"
                },
                "settings": {
                    "$ref": "#/definitions/IVmessInboundSettings",
                    "description": "具体的配置内容，视协议不同而不同"
                },
                "sniffing": {
                    "$ref": "#/definitions/IV2raySniffing",
                    "description": "尝试探测流量的类型"
                },
                "streamSettings": {
                    "$ref": "#/definitions/IV2rayStreamSetting",
                    "description": "底层传输配置"
                },
                "tag": {
                    "description": "此入站连接的标识，用于在其它的配置中定位此连接。当其不为空时，其值必须在所有tag中唯一",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "IVmessInboundSettings": {
            "properties": {
                "clients": {
                    "description": "一组服务器认可的用户。clients 可以为空。当此配置用作动态端口时，V2Ray 会自动创建用户",
                    "items": {
                        "$ref": "#/definitions/IVmessAccount"
                    },
                    "type": "array"
                },
                "default": {
                    "$ref": "#/definitions/IDefaultObject",
                    "description": "可选，clients 的默认配置。仅在配合detour时有效。"
                },
                "detour": {
                    "$ref": "#/definitions/IDetourObject",
                    "description": "指示对应的出站协议使用另一个服务器。"
                },
                "disableInsecureEncryption": {
                    "description": "是否禁止客户端使用不安全的加密方式，当客户端指定下列加密方式时，服务器会主动断开连接。默认值为false\n- \"none\"\n- \"aes-128-cfb\"",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "IVmessOutbound": {
            "properties": {
                "mux": {
                    "description": "Mux 配置，Mux 功能是在一条 TCP 连接上分发多个 TCP 连接的数据",
                    "properties": {
                        "concurrency": {
                            "description": "最大并发连接数。最小值1，最大值1024，默认值8。这个数值表示了一个 TCP 连接上最多承载的 Mux 连接数量。当客户端发出了 8 个 TCP 请求，而concurrency=8时，V2Ray 只会发出一条实际的 TCP 连接，客户端的 8 个请求全部由这个 TCP 连接传输",
                            "type": "number"
                        },
                        "enabled": {
                            "description": "是否启用 Mux",
                            "type": "boolean"
                        }
                    },
                    "type": "object"
                },
                "protocol": {
                    "enum": [
                        "vmess"
                    ],
                    "type": "string"
                },
                "proxySettings": {
                    "additionalProperties": {
                    },
                    "description": "出站代理配置。当出站代理生效时，此出站协议的streamSettings将不起作用",
                    "properties": {
                        "tag": {
                            "description": "当指定另一个出站协议的标识时，此出站协议发出的数据，将被转发至所指定的出站协议发出",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "sendThrough": {
                    "description": "用于发送数据的 IP 地址，当主机有多个 IP 地址时有效，默认值为\"0.0.0.0\"",
                    "type": "string"
                },
                "settings": {
                    "$ref": "#/definitions/IVmessOutboundSettings",
                    "description": "具体的配置内容，视协议不同而不同"
                },
                "streamSettings": {
                    "$ref": "#/definitions/IV2rayStreamSetting",
                    "description": "底层传输配置"
                },
                "tag": {
                    "description": "此出站连接的标识，用于在其它的配置中定位此连接。当其值不为空时，必须在所有 tag 中唯一",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "IVmessOutboundSettings": {
            "properties": {
                "vnext": {
                    "description": "一个数组，包含一系列的服务器配置",
                    "items": {
                        "$ref": "#/definitions/IVmessServer"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "IVmessSecurity": {
            "enum": [
                "aes-128-gcm",
                "auto",
                "chacha20-poly1305",
                "none"
            ],
            "type": "string"
        },
        "IVmessServer": {
            "properties": {
                "address": {
                    "description": "服务器地址，支持 IP 地址或者域名",
                    "type": "string"
                },
                "port": {
                    "description": "服务器端口号",
                    "type": "number"
                },
                "users": {
                    "description": "一组服务器认可的用户",
                    "items": {
                        "$ref": "#/definitions/IVmessServerAccountObject"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "IVmessServerAccountObject": {
            "properties": {
                "alterId": {
                    "description": "为了进一步防止被探测，一个用户可以在主 ID 的基础上，再额外生成多个 ID。这里只需要指定额外的 ID 的数量，推荐值为 4。不指定的话，默认值是 0。最大值 65535。这个值不能超过服务器端所指定的值",
                    "type": "number"
                },
                "id": {
                    "description": "VMess 用户的主 ID。必须是一个合法的 UUID",
                    "type": "string"
                },
                "level": {
                    "description": "用户等级",
                    "type": "number"
                },
                "security": {
                    "$ref": "#/definitions/IVmessSecurity",
                    "description": "加密方式，客户端将使用配置的加密方式发送数据，服务器端自动识别，无需配置"
                }
            },
            "type": "object"
        },
        "IWsSettings": {
            "properties": {
                "headers": {
                    "additionalProperties": {
                    },
                    "description": "自定义 HTTP 头，一个键值对，每个键表示一个 HTTP 头的名称，对应的值是字符串。默认值为空",
                    "type": "object"
                },
                "path": {
                    "description": "WebSocket 所使用的 HTTP 协议路径，默认值为 \"/\"",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "LogLevel": {
            "enum": [
                "debug",
                "error",
                "info",
                "none",
                "warning"
            ],
            "type": "string"
        },
        "ShadowSocksMethod": {
            "enum": [
                "aes-128-gcm",
                "aes-256-gcm",
                "chacha20-ietf-poly1305",
                "chacha20-poly1305",
                "none",
                "plain"
            ],
            "type": "string"
        }
    },
    "description": "V2Ray config",
    "properties": {
        "api": {
            "$ref": "#/definitions/IV2rayAPI",
            "description": "内置的远程控置 API"
        },
        "dns": {
            "$ref": "#/definitions/IV2rayDNS",
            "description": "内置的 DNS 服务器，若此项不存在，则默认使用本机的 DNS 设置"
        },
        "inbounds": {
            "description": "一个数组，每个元素是一个入站连接配置",
            "items": {
                "anyOf": [
                    {
                        "$ref": "#/definitions/IDokodemoInbound"
                    },
                    {
                        "$ref": "#/definitions/IHttpInbound"
                    },
                    {
                        "$ref": "#/definitions/IMTProtoInbound"
                    },
                    {
                        "$ref": "#/definitions/IShadowSocksInbound"
                    },
                    {
                        "$ref": "#/definitions/ISocksInbound"
                    },
                    {
                        "$ref": "#/definitions/IVmessInbound"
                    },
                    {
                        "$ref": "#/definitions/IVLESSInbound"
                    },
                    {
                        "$ref": "#/definitions/ITrojanInbound"
                    }
                ]
            },
            "type": "array"
        },
        "log": {
            "$ref": "#/definitions/IV2rayLog",
            "description": "日志配置，表示 V2Ray 如何输出日志"
        },
        "outbounds": {
            "description": "一个数组，每个元素是一个出站连接配置。列表中的第一个元素作为主出站协议。当路由匹配不存在或没有匹配成功时，流量由主出站协议发出",
            "items": {
                "anyOf": [
                    {
                        "$ref": "#/definitions/IBlackholeOutbound"
                    },
                    {
                        "$ref": "#/definitions/IDNSOutbound"
                    },
                    {
                        "$ref": "#/definitions/IFreedomOutbound"
                    },
                    {
                        "$ref": "#/definitions/IMTProtoOutbound"
                    },
                    {
                        "$ref": "#/definitions/IShadowsocksOutbound"
                    },
                    {
                        "$ref": "#/definitions/ISocksOutbound"
                    },
                    {
                        "$ref": "#/definitions/IVmessOutbound"
                    },
                    {
                        "$ref": "#/definitions/IHttpOutbound"
                    },
                    {
                        "$ref": "#/definitions/IVLESSOutbound"
                    },
                    {
                        "$ref": "#/definitions/ITrojanOutbound"
                    }
                ]
            },
            "type": "array"
        },
        "policy": {
            "$ref": "#/definitions/IV2rayPolicy",
            "description": "本地策略可进行一些权限相关的配置"
        },
        "reverse": {
            "additionalProperties": {
            },
            "description": "反向代理配置",
            "type": "object"
        },
        "routing": {
            "$ref": "#/definitions/IV2rayRouting",
            "description": "路由配置"
        },
        "stats": {
            "description": "当此项存在时，开启统计信息，目前无配置",
            "properties": {
            },
            "type": "object"
        },
        "transport": {
            "$ref": "#/definitions/IV2rayTransport",
            "description": "用于配置 V2Ray 如何与其它服务器建立和使用网络连接"
        }
    },
    "type": "object"
}

